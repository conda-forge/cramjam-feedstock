{% set name = "cramjam" %}
{% set version = "2.2.0" %}
{% set py_ver_split = PY_VER.split(".") %}
{% set major_minor = py_ver_split[ 0 ] + py_ver_split[ 1 ] %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 95823303435f8b47e81efe292731cb56600989d31ae4a764b8db33d7789e17c0

build:
  number: 0
  script: {{ PYTHON }} -m pip install . -vv
  {% set m_postfix = 'm' if major_minor in ('36', '37') else '' %}
  script: pip install --no-deps https://pypi.debian.net/cramjam/cramjam-{{ version }}-cp{{ major_minor }}-cp{{ major_minor + m_postfix }}-manylinux2010_x86_64.whl  # [linux]
  script: pip install --no-deps https://pypi.debian.net/cramjam/cramjam-{{ version }}-cp{{ major_minor }}-cp{{ major_minor + m_postfix }}-macosx_10_7_{{ OSX_ARCH }}.whl  # [osx]
  script: pip install --no-deps https://pypi.debian.net/cramjam/cramjam-{{ version }}-cp{{ major_minor }}-none-win_amd64.whl  # [win]


requirements:
  host:
    - python
    - pip
  run:
    - python

test:
  imports:
    - cramjam

about:
  home: https://github.com/milesgranger/pyrus-cramjam
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: python bindings to rust-implemented compression
  # The remaining entries in this section are optional, but recommended.
  description: |
    Extremely thin Python bindings to de/compression algorithms in Rust. 
    Allows for using algorithms such as Snappy, without any system dependencies.
    This is handy when being used in environments like AWS Lambda, 
    where installing packages like python-snappy becomes difficult because of 
    system level dependencies.
  doc_url: https://docs.rs/cramjam

extra:
  recipe-maintainers:
    - martindurant
    - milesgranger
