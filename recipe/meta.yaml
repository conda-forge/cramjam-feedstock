{% set name = "cramjam" %}
{% set version = "2.5.0" %}
{% set py_ver_split = PY_VER.split(".") %}
{% set major_minor = py_ver_split[ 0 ] + py_ver_split[ 1 ] %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: a92c0c2db4c6a3804eaffa253c7ca49f849e7a893a31c902a8123d7c36b2b487

build:
  number: 1
  script:
    {% if build_platform != target_platform %}
    - export PYO3_CROSS_INCLUDE_DIR=$PREFIX/include
    - export PYO3_CROSS_LIB_DIR=$PREFIX/lib/python$PY_VER
    - export PYO3_CROSS_PYTHON_VERSION=$PY_VER
    {% endif %}
    - {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - maturin                                # [build_platform != target_platform]
    - toml                                   # [build_platform != target_platform]
    - {{ compiler('rust') }}
    - {{ compiler('c') }}                    # [unix]
    - {{ compiler('m2w64_c') }}              # [win]
  host:
    - python
    - pip
    - maturin
    - toml
  run:
    - python

test:
  imports:
    - cramjam

about:
  home: https://github.com/milesgranger/pyrus-cramjam
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: python bindings to rust-implemented compression
  # The remaining entries in this section are optional, but recommended.
  description: |
    Extremely thin Python bindings to de/compression algorithms in Rust. 
    Allows for using algorithms such as Snappy, without any system dependencies.
    This is handy when being used in environments like AWS Lambda, 
    where installing packages like python-snappy becomes difficult because of 
    system level dependencies.
  doc_url: https://docs.rs/cramjam

extra:
  recipe-maintainers:
    - martindurant
    - milesgranger
